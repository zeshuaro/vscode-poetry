name: GitHub Actions

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * SUN"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 💻
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Run tests on Linux 🧪
        if: runner.os == 'Linux'
        run: |
          yarn
          xvfb-run -a yarn test

      - name: Run tests on MacOS or Windows 🧪
        if: runner.os != 'Linux'
        run: |
          yarn
          yarn test

      - name: Upload coverage report 📡
        uses: codecov/codecov-action@v5.3.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 💻
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Run linting 🧪
        run: |
          yarn
          yarn lint

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: ${{ (github.ref == 'refs/heads/main') && (contains(fromJSON('["workflow_dispatch", "schedule"]'), github.event_name)) }}

    steps:
      - name: Create GitHub App token 🔑
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Setup Node 💻
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Install dependencies 📦
        run: yarn

      - name: Release 🚀
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
