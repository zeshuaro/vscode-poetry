name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type"
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Setup Node 💻
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: Get previous tag 🏷️
        id: previous-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1.1.0

      - name: Bump extension version 🔼
        id: bump-version
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          yarn
          yarn config set version-git-message "chore(release): v%s [skip ci]"
          yarn version --${{ github.event.inputs.release-type }}
          git push --force --follow-tags

      - name: Get latest tag 🏷️
        id: latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1.1.0

      - name: Generate changelog 📝
        id: generate-changelog
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: changelog-config.json
          fromTag: ${{ steps.previous-tag.outputs.tag }}
          toTag: ${{ steps.latest-tag.outputs.tag }}

      - name: Update changelog 🆕
        env:
          version: ${{ steps.latest-tag.outputs.tag }}
        run: |
          printf "## ${{ env.version }}\n\n${{ steps.generate-changelog.outputs.changelog }}" | cat - CHANGELOG.md > /tmp/changelog && mv /tmp/changelog CHANGELOG.md
          git add CHANGELOG.md
          git commit -am "docs(changelog): ${{ env.version }} [skip ci]"
          git push --force

      - name: Publish 📡
        run: |
          yarn package
          yarn vsce publish --yarn -p ${{ secrets.VSCE_PAT }}

      - name: Release 🚀
        uses: ncipollo/release-action@v1.10.0
        with:
          tag: ${{ steps.latest-tag.outputs.tag }}
          artifacts: "vscode-python-poetry-*.vsix"
          body: ${{ steps.generate-changelog.outputs.changelog }}
          token: ${{ secrets.PAT }}
